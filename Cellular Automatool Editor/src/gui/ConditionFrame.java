/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import automata.modular.ConditionWrapper;
import automata.modular.ModularAutomata;
import automata.modular.conditions.*;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;


public class ConditionFrame extends javax.swing.JFrame {

    
    private ModularAutomata automata;
    private ConditionWrapper conditionWrapper;
    
    public ConditionFrame(JFrame parent, ModularAutomata automata, ConditionWrapper conditionWrapper) {
	initComponents();
	this.conditionWrapper = conditionWrapper;
	this.automata = automata;
	
	
	setConditionPanel();
	
	parent.setEnabled(false);
	setVisible(true);
	setAlwaysOnTop(true);
	setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
	addWindowListener(new java.awt.event.WindowAdapter() {
	@Override
	    public void windowClosing(java.awt.event.WindowEvent windowEvent) {
		parent.setEnabled(true);
		dispose();
	    }
	});
    }
    
    private void setConditionPanel() {
	if (conditionWrapper.condition instanceof ConditionLessThan) {
	    lessThanPanel.setAutomataAndCondition(automata, (ConditionLessThan)conditionWrapper.condition);
	    
	    lessThanPanel.setVisible(true);
	    moreThanPanel.setVisible(false);
	    equalPanel.setVisible(false);
	    andPanel.setVisible(false);
	    orPanel.setVisible(false);
	    truePanel.setVisible(false);
	} else if (conditionWrapper.condition instanceof ConditionMoreThan) {
	    moreThanPanel.setAutomataAndCondition(automata, (ConditionMoreThan)conditionWrapper.condition);

	    lessThanPanel.setVisible(false);
	    moreThanPanel.setVisible(true);
	    equalPanel.setVisible(false);
	    andPanel.setVisible(false);
	    orPanel.setVisible(false);
	    truePanel.setVisible(false);
	} else if (conditionWrapper.condition instanceof ConditionEqual) {
	    equalPanel.setAutomataAndCondition(automata, (ConditionEqual)conditionWrapper.condition);

	    lessThanPanel.setVisible(false);
	    moreThanPanel.setVisible(false);
	    equalPanel.setVisible(true);
	    andPanel.setVisible(false);
	    orPanel.setVisible(false);
	    truePanel.setVisible(false);
	    
	} else if (conditionWrapper.condition instanceof ConditionAnd) {
	    andPanel.setAutomataAndCondition(automata, (ConditionAnd)conditionWrapper.condition, this);

	    lessThanPanel.setVisible(false);
	    moreThanPanel.setVisible(false);
	    equalPanel.setVisible(false);
	    andPanel.setVisible(true);
	    orPanel.setVisible(false);
	    truePanel.setVisible(false);
	    
	} else if (conditionWrapper.condition instanceof ConditionOr) {
	    orPanel.setAutomataAndCondition(automata, (ConditionOr)conditionWrapper.condition, this);

	    lessThanPanel.setVisible(false);
	    moreThanPanel.setVisible(false);
	    equalPanel.setVisible(false);
	    andPanel.setVisible(false);
	    orPanel.setVisible(true);
	    truePanel.setVisible(false);
	    
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        conditionTypeComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lessThanPanel = new gui.conditions.LessThanPanel();
        andPanel = new gui.conditions.AndPanel();
        moreThanPanel = new gui.conditions.MoreThanPanel();
        equalPanel = new gui.conditions.EqualPanel();
        orPanel = new gui.conditions.OrPanel();
        truePanel = new gui.conditions.TruePanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        conditionTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Less Than", "More Than", "Equal", "And", "Or", "True" }));
        conditionTypeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                conditionTypeComboBoxItemStateChanged(evt);
            }
        });
        conditionTypeComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                conditionTypeComboBoxPropertyChange(evt);
            }
        });

        jLabel1.setText("ConditionType:");

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lessThanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moreThanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(andPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(truePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lessThanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moreThanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(andPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(truePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doneButton)
                    .addComponent(jLabel1)
                    .addComponent(conditionTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(conditionTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doneButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
	dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_doneButtonActionPerformed

    private void conditionTypeComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_conditionTypeComboBoxPropertyChange
        
    }//GEN-LAST:event_conditionTypeComboBoxPropertyChange

    private void conditionTypeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_conditionTypeComboBoxItemStateChanged
        switch(conditionTypeComboBox.getSelectedIndex()) {
	    case 0:
		conditionWrapper.condition = new ConditionLessThan(1, 0);
		break;
	    case 1:
		conditionWrapper.condition = new ConditionMoreThan(0, 0);
		break;
	    case 2:
		conditionWrapper.condition = new ConditionEqual(0, 0);
		break;
	    case 3:
		conditionWrapper.condition = new ConditionAnd(new ConditionLessThan(1, 0), new ConditionLessThan(1, 0));
		break;
	    case 4:
		conditionWrapper.condition = new ConditionOr(new ConditionLessThan(1, 0), new ConditionLessThan(1, 0));
		break;
	    case 5:
		conditionWrapper.condition = new ConditionTrue();
		break;
	}
	
	setConditionPanel();
    }//GEN-LAST:event_conditionTypeComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.conditions.AndPanel andPanel;
    private javax.swing.JComboBox<String> conditionTypeComboBox;
    private javax.swing.JButton doneButton;
    private gui.conditions.EqualPanel equalPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private gui.conditions.LessThanPanel lessThanPanel;
    private gui.conditions.MoreThanPanel moreThanPanel;
    private gui.conditions.OrPanel orPanel;
    private gui.conditions.TruePanel truePanel;
    // End of variables declaration//GEN-END:variables
}
